version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: shoppingcart-postgres
    environment:
      POSTGRES_DB: shoppingcart
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - shoppingcart-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shoppingcart-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - shoppingcart-network
    restart: unless-stopped

  # Shopping Cart API
  api:
    image: shoppingcart-api:latest
    container_name: shoppingcart-api
    build:
      context: .
      dockerfile: src/ShoppingCart.API/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__PostgreSQL=Host=postgres;Port=5432;Database=shoppingcart;Username=postgres;Password=postgres123
      - ConnectionStrings__Redis=redis:6379
      - ProductApi__BaseUrl=https://api.escuelajs.co
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shoppingcart-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  shoppingcart-network:
    driver: bridge

